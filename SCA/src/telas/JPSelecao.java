/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import bancodedados.Academico;
import bancodedados.Bancos;
import bancodedados.Eventos;
import bancodedados.EventosAux;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author pfsel
 */
public class JPSelecao extends javax.swing.JPanel {

    private JFPrincipal pai;
    private Calendar c1, c2;
    // private Bancos d;

    /**
     * Creates new form JPSelecao
     */
    public JPSelecao(JFPrincipal p) {
        this.pai = p;
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bGMonitora = new javax.swing.ButtonGroup();
        bGTipos = new javax.swing.ButtonGroup();
        jBAlerta = new javax.swing.JButton();
        jBRelatorio = new javax.swing.JButton();
        jRBAluno = new javax.swing.JRadioButton();
        jRBTurma = new javax.swing.JRadioButton();
        jRBCurso = new javax.swing.JRadioButton();
        jTFIdentificacao = new javax.swing.JTextField();
        jFTPeriodo1 = new javax.swing.JFormattedTextField();
        jLAux = new javax.swing.JLabel();
        jFTPeriodo2 = new javax.swing.JFormattedTextField();
        jRBFaltasCon = new javax.swing.JRadioButton();
        jRBFaltasInt = new javax.swing.JRadioButton();
        jRBFaltasSem = new javax.swing.JRadioButton();
        jRBChegada = new javax.swing.JRadioButton();
        jRBSaida = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBExcluirTab = new javax.swing.JButton();
        jlNomeAlerta = new javax.swing.JLabel();
        jTFNomeAlerta = new javax.swing.JTextField();
        jBVoltar = new javax.swing.JButton();
        jBCriar = new javax.swing.JButton();
        jFTFaltasInt = new javax.swing.JFormattedTextField();
        jFTChegadaMin = new javax.swing.JFormattedTextField();
        jFTChegadaVezes = new javax.swing.JFormattedTextField();
        jFTSaidaMin = new javax.swing.JFormattedTextField();
        jFTSaidaVezes = new javax.swing.JFormattedTextField();
        jFTFaltasCon = new javax.swing.JFormattedTextField();

        jBAlerta.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBAlerta.setText("Alerta");
        jBAlerta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlertaActionPerformed(evt);
            }
        });

        jBRelatorio.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBRelatorio.setText("Relatório");
        jBRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRelatorioActionPerformed(evt);
            }
        });

        bGMonitora.add(jRBAluno);
        jRBAluno.setText("Aluno");
        jRBAluno.setEnabled(false);
        jRBAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBAlunoActionPerformed(evt);
            }
        });

        bGMonitora.add(jRBTurma);
        jRBTurma.setText("Turma");
        jRBTurma.setEnabled(false);
        jRBTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBTurmaActionPerformed(evt);
            }
        });

        bGMonitora.add(jRBCurso);
        jRBCurso.setText("Curso");
        jRBCurso.setEnabled(false);
        jRBCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBCursoActionPerformed(evt);
            }
        });

        jTFIdentificacao.setForeground(new java.awt.Color(102, 102, 102));
        jTFIdentificacao.setText("INFORME");
        jTFIdentificacao.setEnabled(false);
        jTFIdentificacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTFIdentificacaoMouseClicked(evt);
            }
        });
        jTFIdentificacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFIdentificacaoKeyReleased(evt);
            }
        });

        try {
            jFTPeriodo1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTPeriodo1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFTPeriodo1.setEnabled(false);

        jLAux.setText("à");
        jLAux.setEnabled(false);

        try {
            jFTPeriodo2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTPeriodo2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFTPeriodo2.setEnabled(false);
        jFTPeriodo2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTPeriodo2KeyReleased(evt);
            }
        });

        bGTipos.add(jRBFaltasCon);
        jRBFaltasCon.setText("Faltas consecutivas");
        jRBFaltasCon.setEnabled(false);
        jRBFaltasCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBFaltasConActionPerformed(evt);
            }
        });

        bGTipos.add(jRBFaltasInt);
        jRBFaltasInt.setText("Faltas intercaladas");
        jRBFaltasInt.setEnabled(false);
        jRBFaltasInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBFaltasIntActionPerformed(evt);
            }
        });

        bGTipos.add(jRBFaltasSem);
        jRBFaltasSem.setText("Faltas por dia da semana");
        jRBFaltasSem.setEnabled(false);

        bGTipos.add(jRBChegada);
        jRBChegada.setText("Chegada tardia");
        jRBChegada.setEnabled(false);
        jRBChegada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBChegadaActionPerformed(evt);
            }
        });

        bGTipos.add(jRBSaida);
        jRBSaida.setText("Saída antecipada");
        jRBSaida.setEnabled(false);
        jRBSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBSaidaActionPerformed(evt);
            }
        });

        jPanel1.setEnabled(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alertas"
            }
        ));
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);

        jBExcluirTab.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBExcluirTab.setText("Excluir");
        jBExcluirTab.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(jBExcluirTab)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBExcluirTab)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlNomeAlerta.setText("Nome:");
        jlNomeAlerta.setEnabled(false);

        jTFNomeAlerta.setEnabled(false);
        jTFNomeAlerta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFNomeAlertaKeyReleased(evt);
            }
        });

        jBVoltar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBVoltar.setText("Voltar");
        jBVoltar.setEnabled(false);
        jBVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVoltarActionPerformed(evt);
            }
        });

        jBCriar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBCriar.setText("Criar");
        jBCriar.setEnabled(false);
        jBCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCriarActionPerformed(evt);
            }
        });

        try {
            jFTFaltasInt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTFaltasInt.setEnabled(false);
        jFTFaltasInt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTFaltasIntKeyReleased(evt);
            }
        });

        try {
            jFTChegadaMin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTChegadaMin.setEnabled(false);
        jFTChegadaMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTChegadaMinKeyReleased(evt);
            }
        });

        try {
            jFTChegadaVezes.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTChegadaVezes.setEnabled(false);
        jFTChegadaVezes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTChegadaVezesKeyReleased(evt);
            }
        });

        try {
            jFTSaidaMin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTSaidaMin.setEnabled(false);
        jFTSaidaMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTSaidaMinKeyReleased(evt);
            }
        });

        try {
            jFTSaidaVezes.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTSaidaVezes.setEnabled(false);
        jFTSaidaVezes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTSaidaVezesKeyReleased(evt);
            }
        });

        try {
            jFTFaltasCon.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTFaltasCon.setEnabled(false);
        jFTFaltasCon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTFaltasConKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRBFaltasSem)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRBSaida)
                                    .addComponent(jRBChegada))
                                .addGap(85, 85, 85)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jFTChegadaVezes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jFTSaidaVezes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jlNomeAlerta)
                                .addGap(4, 4, 4)
                                .addComponent(jTFNomeAlerta, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jBVoltar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBCriar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jFTChegadaMin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jRBAluno)
                                    .addGap(2, 2, 2)
                                    .addComponent(jRBTurma)
                                    .addGap(2, 2, 2)
                                    .addComponent(jRBCurso))
                                .addComponent(jTFIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jRBFaltasInt)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jFTFaltasInt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jRBFaltasCon)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jFTFaltasCon, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jFTPeriodo1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(4, 4, 4)
                                    .addComponent(jLAux)
                                    .addGap(4, 4, 4)
                                    .addComponent(jFTPeriodo2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jBAlerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBRelatorio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jFTSaidaMin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jBAlerta)
                .addGap(6, 6, 6)
                .addComponent(jBRelatorio)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRBAluno)
                    .addComponent(jRBTurma)
                    .addComponent(jRBCurso))
                .addGap(2, 2, 2)
                .addComponent(jTFIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jFTPeriodo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLAux))
                    .addComponent(jFTPeriodo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBFaltasCon)
                    .addComponent(jFTFaltasCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBFaltasInt)
                    .addComponent(jFTFaltasInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jRBFaltasSem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBChegada)
                    .addComponent(jFTChegadaMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTChegadaVezes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBSaida)
                    .addComponent(jFTSaidaMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTSaidaVezes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jlNomeAlerta))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTFNomeAlerta, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jBVoltar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBCriar))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRelatorioActionPerformed
        this.jRBAluno.setEnabled(true);
        this.jRBCurso.setEnabled(true);
        this.jRBTurma.setEnabled(true);
        this.jBAlerta.setEnabled(false);
        this.jBVoltar.setEnabled(true);

    }//GEN-LAST:event_jBRelatorioActionPerformed

    private void jRBAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBAlunoActionPerformed
        this.jTFIdentificacao.setEnabled(true);
    }//GEN-LAST:event_jRBAlunoActionPerformed

    private void jRBTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBTurmaActionPerformed
        this.jTFIdentificacao.setEnabled(true);
    }//GEN-LAST:event_jRBTurmaActionPerformed

    private void jRBCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBCursoActionPerformed
        this.jTFIdentificacao.setEnabled(true);
    }//GEN-LAST:event_jRBCursoActionPerformed

    private void jTFIdentificacaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFIdentificacaoKeyReleased
        this.idPreenchido(jTFIdentificacao.getText().toUpperCase());


    }//GEN-LAST:event_jTFIdentificacaoKeyReleased

    private void jTFIdentificacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFIdentificacaoMouseClicked
        jTFIdentificacao.setText("");
        jTFIdentificacao.setForeground(Color.BLACK);


    }//GEN-LAST:event_jTFIdentificacaoMouseClicked

    private void jFTPeriodo2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTPeriodo2KeyReleased

        if (this.jTFIdentificacao.getText().length() > 0) {
            this.jRBChegada.setEnabled(true);
            this.jRBFaltasCon.setEnabled(true);
            this.jRBFaltasSem.setEnabled(true);
            this.jRBFaltasInt.setEnabled(true);
            this.jRBSaida.setEnabled(true);
        }
    }//GEN-LAST:event_jFTPeriodo2KeyReleased

    private void jRBFaltasConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBFaltasConActionPerformed
        this.verificaTipos();
    }//GEN-LAST:event_jRBFaltasConActionPerformed

    private void jRBFaltasIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBFaltasIntActionPerformed
        this.verificaTipos();
    }//GEN-LAST:event_jRBFaltasIntActionPerformed

    private void jRBChegadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBChegadaActionPerformed
        this.verificaTipos();
    }//GEN-LAST:event_jRBChegadaActionPerformed

    private void jRBSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBSaidaActionPerformed
        this.verificaTipos();
    }//GEN-LAST:event_jRBSaidaActionPerformed

    private void jBCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCriarActionPerformed
        this.periodo();
        this.faltasInt();
        this.faltasCon();
        this.chegadaTardia();
        this.saidaAntecipada();
    }//GEN-LAST:event_jBCriarActionPerformed
    @SuppressWarnings("empty-statement")

    public void saidaAntecipada(){
        if (this.jBRelatorio.isEnabled()) {
            if (this.jRBSaida.isSelected()) {
                    Bancos ev = new Eventos();
                ev.gerar();
                ArrayList<EventosAux> al = ev.retornaLista();
                ArrayList<EventosAux> al2 = new ArrayList<EventosAux>();
                ArrayList<EventosAux> saidas = new ArrayList<EventosAux>();
                for (EventosAux monitorado : al) {
                    if (monitorado.getAluno().equals(this.jTFIdentificacao.getText().toUpperCase())) {
                        al2.add(monitorado);
                    }
                }
                
                  if (Integer.parseInt(this.jFTSaidaMin.getText()) > 30) {
                    for (EventosAux hora : al2) {
                        if (hora.getSentido().equals("Interna,Externa")) {
                            if (((hora.getC().get(Calendar.HOUR_OF_DAY) > 7) && (hora.getC().get(Calendar.HOUR) < 12))
                                    || ((hora.getC().get(Calendar.HOUR_OF_DAY) > 13) && (hora.getC().get(Calendar.HOUR) < 18))) {
                                saidas.add(hora);
                            }
                        }
                    }
                } else {
                    for (EventosAux hora : al2) {
                        if (hora.getSentido().equals("Interna,Externa")) {

                            System.out.println(hora.getC().get(Calendar.MINUTE));
                            System.out.println(hora.getC().get(Calendar.HOUR_OF_DAY));
                            if (hora.getC().get(Calendar.MINUTE) < 30) {
                                if ((hora.getC().get(Calendar.MINUTE) + (Integer.parseInt(this.jFTSaidaMin.getText()))) < 30) {
                                    saidas.add(hora);
                                }
                            }
                        }
                    }
                  }
                     System.out.println(saidas.size());
                if (saidas.size() >= Integer.parseInt(this.jFTSaidaVezes.getText())) {
                    for (EventosAux fim : saidas) {
                        if (fim.getC().get(Calendar.MINUTE) < 10) {
                            System.out.println(fim.getC().get(Calendar.HOUR_OF_DAY) + ":0" + fim.getC().get(Calendar.MINUTE));

                        } else {
                            System.out.println(fim.getC().get(Calendar.HOUR_OF_DAY) + ":" + fim.getC().get(Calendar.MINUTE));

                        }
                    }
                } else {
                    System.out.println("nada");
                }
            
                }
                
            }
            
    
    }
    public void chegadaTardia() {
        if (this.jBRelatorio.isEnabled()) {
            if (this.jRBChegada.isSelected()) {
                Bancos ev = new Eventos();
                ev.gerar();
                ArrayList<EventosAux> al = ev.retornaLista();
                ArrayList<EventosAux> al2 = new ArrayList<EventosAux>();
                ArrayList<EventosAux> chegadas = new ArrayList<EventosAux>();
                for (EventosAux monitorado : al) {
                    if (monitorado.getAluno().equals(this.jTFIdentificacao.getText().toUpperCase())) {
                        al2.add(monitorado);
                    }
                }

                if (Integer.parseInt(this.jFTChegadaMin.getText()) > 30) {
                    for (EventosAux hora : al2) {
                        if (hora.getSentido().equals("Externa,Interna")) {
                            if (((hora.getC().get(Calendar.HOUR_OF_DAY) > 7) && (hora.getC().get(Calendar.HOUR) < 12))
                                    || ((hora.getC().get(Calendar.HOUR_OF_DAY) > 13) && (hora.getC().get(Calendar.HOUR) < 18))) {
                                chegadas.add(hora);
                            }
                        }
                    }
                } else {
                    for (EventosAux hora : al2) {
                        if (hora.getSentido().equals("Externa,Interna")) {

                            System.out.println(hora.getC().get(Calendar.MINUTE));
                            System.out.println(hora.getC().get(Calendar.HOUR_OF_DAY));
                            if (hora.getC().get(Calendar.MINUTE) > 30) {
                                if ((hora.getC().get(Calendar.MINUTE) - (Integer.parseInt(this.jFTChegadaMin.getText()))) > 30) {
                                    chegadas.add(hora);
                                }
                            }
                        }
                    }
                }
                System.out.println(chegadas.size());
                if (chegadas.size() >= Integer.parseInt(this.jFTChegadaVezes.getText())) {
                    for (EventosAux fim : chegadas) {
                        if (fim.getC().get(Calendar.MINUTE) < 10) {
                            System.out.println(fim.getC().get(Calendar.HOUR_OF_DAY) + ":0" + fim.getC().get(Calendar.MINUTE));

                        } else {
                            System.out.println(fim.getC().get(Calendar.HOUR_OF_DAY) + ":" + fim.getC().get(Calendar.MINUTE));

                        }
                    }
                } else {
                    System.out.println("nada");
                }
            }
        }
    }

    public void faltasCon() {
        if (this.jBRelatorio.isEnabled()) {

            if (this.jRBFaltasCon.isSelected()) {
                Bancos ev = new Eventos();
                ev.gerar();
                ArrayList<EventosAux> al = ev.retornaLista();
                ArrayList<EventosAux> al2 = new ArrayList<EventosAux>();
                ArrayList<Integer> faltas = new ArrayList<Integer>();
                for (EventosAux monitorado : al) {
                    if (monitorado.getAluno().equals(this.jTFIdentificacao.getText().toUpperCase())) {
                        al2.add(monitorado);
                    }
                }

                for (EventosAux monitorado : al2) { //dias que veio
                    for (int i = c2.get(Calendar.DAY_OF_MONTH); i > 0; i--) {
                        if (monitorado.getC().get(Calendar.DAY_OF_MONTH) != i) {
                            if (i > c1.get(Calendar.DAY_OF_MONTH)) {
                                if (!faltas.contains(i)) {
                                    faltas.add(i);
                                }
                            }
                        }
                    }
                }

                for (EventosAux monitorado : al2) { //remove os dias que veio
                    for (int i = 0; i < faltas.size(); i++) {

                        if (faltas.get(i) == monitorado.getC().get(Calendar.DAY_OF_MONTH)) {
                            faltas.remove(i);
                        }
                    }
                }

                ArrayList<ArrayList<Integer>> filtro = new ArrayList<ArrayList<Integer>>();

                for (int i = 0; i < faltas.size() - 1; i++) {
                    ArrayList<Integer> aux = new ArrayList<Integer>();
                    int k = i;

                    while ((faltas.get(k + 1) == (faltas.get(k) - 1))) {
                        aux.add(faltas.get(k));
                        aux.add(faltas.get(k + 1));
                        k++;
                        if (k == faltas.size() - 1) {
                            break;
                        }
                    }
                    filtro.add(aux);
                }

                ArrayList<Integer> faltasTot = new ArrayList<Integer>();

                for (ArrayList<Integer> preTotal : filtro) {
                    if (preTotal.size() >= Integer.parseInt(this.jFTFaltasCon.getText())) {

                        for (Integer pre : preTotal) {
                            if (!faltasTot.contains(pre)) {
                                faltasTot.add(pre);
                            }
                        }
                    }
                }

                if (faltasTot.size() < Integer.parseInt(jFTFaltasCon.getText())) {
                    System.out.println("Não faltou mais que 5 dias");
                } else {
                    for (Integer te : faltasTot) {
                        System.out.println("faltas:");
                        System.out.println(te);
                    }
                }

            }
        }

    }

    public void faltasInt() {
        if (this.jBRelatorio.isEnabled()) {
            if (this.jRBFaltasInt.isSelected()) {
                Bancos ev = new Eventos();
                ev.gerar();
                ArrayList<EventosAux> al = ev.retornaLista();
                ArrayList<EventosAux> al2 = new ArrayList<EventosAux>();
                ArrayList<Integer> faltas = new ArrayList<Integer>();
                for (EventosAux monitorado : al) {
                    if (monitorado.getAluno().equals(this.jTFIdentificacao.getText().toUpperCase())) {
                        al2.add(monitorado);
                    }
                }

                for (EventosAux monitorado : al2) {
                    for (int i = c2.get(Calendar.DAY_OF_MONTH); i > 0; i--) {
                        if (monitorado.getC().get(Calendar.DAY_OF_MONTH) != i) {
                            if (i > c1.get(Calendar.DAY_OF_MONTH)) {
                                if (!faltas.contains(i)) {
                                    faltas.add(i);
                                }
                            }
                        }
                    }
                }

                for (EventosAux monitorado : al2) {
                    for (int i = 0; i < faltas.size(); i++) {

                        if (faltas.get(i) == monitorado.getC().get(Calendar.DAY_OF_MONTH)) {
                            faltas.remove(i);
                        }
                    }
                }
                System.out.println(Integer.parseInt(jFTFaltasInt.getText()));
                if (faltas.size() < Integer.parseInt(jFTFaltasInt.getText())) {
                    System.out.println("Não faltou mais que 5 dias");
                } else {
                    for (Integer te : faltas) {
                        System.out.println(te);
                    }
                }
            }
        }
    }
    private void jBVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVoltarActionPerformed
        this.limpaCampos();
        this.jBAlerta.setEnabled(true);
        this.jBRelatorio.setEnabled(true);
    }//GEN-LAST:event_jBVoltarActionPerformed

    private void jFTChegadaMinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTChegadaMinKeyReleased
        if (this.jFTChegadaMin.getText().length() > 0) {
            this.jFTChegadaVezes.setEnabled(true);
        } else {
            this.jFTChegadaVezes.setEnabled(false);
        }
    }//GEN-LAST:event_jFTChegadaMinKeyReleased

    private void jFTSaidaMinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTSaidaMinKeyReleased
        if (this.jFTSaidaMin.getText().length() > 0) {
            this.jFTSaidaVezes.setEnabled(true);
        } else {
            this.jFTSaidaVezes.setEnabled(false);

        }    }//GEN-LAST:event_jFTSaidaMinKeyReleased

    private void jFTFaltasIntKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTFaltasIntKeyReleased
        if (this.jFTFaltasInt.getText().length() > 0 && this.jBRelatorio.isEnabled() == true) {
            this.jBCriar.setEnabled(true);
        } else if (this.jFTFaltasInt.getText().length() > 0) {
            this.jTFNomeAlerta.setEnabled(true);
            this.jlNomeAlerta.setEnabled(true);
        } else {
            this.jTFNomeAlerta.setEnabled(false);
            this.jlNomeAlerta.setEnabled(false);
            this.jBCriar.setEnabled(false);

        }
    }//GEN-LAST:event_jFTFaltasIntKeyReleased

    private void jFTChegadaVezesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTChegadaVezesKeyReleased
        if (this.jFTChegadaVezes.getText().length() > 0 && this.jBRelatorio.isEnabled() == true) {
            this.jBCriar.setEnabled(true);
        } else if (this.jFTChegadaVezes.getText().length() > 0) {
            this.jTFNomeAlerta.setEnabled(true);
            this.jlNomeAlerta.setEnabled(true);
        } else {
            this.jTFNomeAlerta.setEnabled(false);
            this.jlNomeAlerta.setEnabled(false);
            this.jBCriar.setEnabled(false);

        }
    }//GEN-LAST:event_jFTChegadaVezesKeyReleased

    private void jFTSaidaVezesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTSaidaVezesKeyReleased
        if (this.jFTSaidaVezes.getText().length() > 0 && this.jBRelatorio.isEnabled() == true) {
            this.jBCriar.setEnabled(true);
        } else if (this.jFTSaidaVezes.getText().length() > 0) {
            this.jTFNomeAlerta.setEnabled(true);
            this.jlNomeAlerta.setEnabled(true);
        } else {
            this.jTFNomeAlerta.setEnabled(false);
            this.jlNomeAlerta.setEnabled(false);
            this.jBCriar.setEnabled(false);

        }
    }//GEN-LAST:event_jFTSaidaVezesKeyReleased

    private void jFTFaltasConKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTFaltasConKeyReleased
        if (this.jFTFaltasCon.getText().equals("  ")) {
            this.jBCriar.setEnabled(false);
        }

        if (this.jFTFaltasCon.getText().length() > 0 && this.jBRelatorio.isEnabled() == true) {
            this.jBCriar.setEnabled(true);
        } else if (this.jFTFaltasInt.getText().length() > 0) {
            this.jTFNomeAlerta.setEnabled(true);
            this.jlNomeAlerta.setEnabled(true);
        } else {
            this.jTFNomeAlerta.setEnabled(false);
            this.jlNomeAlerta.setEnabled(false);

        }
    }//GEN-LAST:event_jFTFaltasConKeyReleased

    private void jBAlertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlertaActionPerformed
        this.jRBAluno.setEnabled(true);
        this.jRBCurso.setEnabled(true);
        this.jRBTurma.setEnabled(true);
        this.jBRelatorio.setEnabled(false);
        this.jBVoltar.setEnabled(true);    }//GEN-LAST:event_jBAlertaActionPerformed

    private void jTFNomeAlertaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFNomeAlertaKeyReleased
        this.jBCriar.setEnabled(true);
    }//GEN-LAST:event_jTFNomeAlertaKeyReleased

    private void periodo() {
        if (this.jBRelatorio.isEnabled()) {
            this.c1 = Calendar.getInstance();
            this.c2 = Calendar.getInstance();
            String p1[] = jFTPeriodo1.getText().split("/");
            String p2[] = jFTPeriodo2.getText().split("/");

            c1.set(Calendar.YEAR, Integer.parseInt(p1[2]));
            c1.set(Calendar.MONTH, Integer.parseInt(p1[1]));
            c1.set(Calendar.DAY_OF_MONTH, Integer.parseInt(p1[0]));
            c2.set(Calendar.YEAR, Integer.parseInt(p2[2]));

            c2.set(Calendar.MONTH, Integer.parseInt(p2[1]));
            c2.set(Calendar.DAY_OF_MONTH, Integer.parseInt(p2[0]));

        }
    }

    private void idPreenchido(String texto) {
        Bancos d = new Academico(texto);

        d.gerar();
        d.consultar();
        if (this.jBRelatorio.isEnabled() == true && d.autenticar()) {

            this.jFTPeriodo1.setEnabled(true);
            this.jFTPeriodo2.setEnabled(true);
            this.jLAux.setEnabled(true);
        } else if (d.autenticar()) {
            this.jRBChegada.setEnabled(true);
            this.jRBFaltasCon.setEnabled(true);
            this.jRBFaltasSem.setEnabled(true);
            this.jRBFaltasInt.setEnabled(true);
            this.jRBSaida.setEnabled(true);
        } else {
            this.jFTPeriodo1.setEnabled(false);
            this.jFTPeriodo2.setEnabled(false);
            this.jLAux.setEnabled(false);
            this.jRBChegada.setEnabled(false);
            this.jRBFaltasCon.setEnabled(false);
            this.jRBFaltasSem.setEnabled(false);
            this.jRBFaltasInt.setEnabled(false);
            this.jRBSaida.setEnabled(false);

        }

    }

    private void verificaTipos() {
        if (this.jRBFaltasCon.isSelected()) {
            this.jFTFaltasCon.setEnabled(true);

        } else {
            this.jFTFaltasCon.setEnabled(false);
            this.jFTFaltasCon.setText("");
        }

        if (this.jRBFaltasInt.isSelected()) {
            this.jFTFaltasInt.setEnabled(true);
        } else {
            this.jFTFaltasInt.setEnabled(false);
            this.jFTFaltasInt.setText("");
        }

        if (this.jRBChegada.isSelected()) {
            this.jFTChegadaMin.setEnabled(true);
        } else {
            this.jFTChegadaMin.setEnabled(false);
            this.jFTChegadaVezes.setEnabled(false);
            this.jFTChegadaMin.setText("");
            this.jFTChegadaVezes.setText("");
        }
        if (this.jRBSaida.isSelected()) {
            this.jFTSaidaMin.setEnabled(true);
        } else {
            this.jFTSaidaMin.setEnabled(false);
            this.jFTSaidaVezes.setEnabled(false);
            this.jFTSaidaMin.setText("");
            this.jFTSaidaVezes.setText("");
        }
    }

    private void limpaCampos() {
        this.jRBAluno.setEnabled(false);
        this.jRBCurso.setEnabled(false);
        this.jRBTurma.setEnabled(false);
        this.bGMonitora.clearSelection();
        this.bGTipos.clearSelection();
        this.jFTPeriodo1.setEnabled(false);
        this.jFTPeriodo2.setEnabled(false);
        this.jLAux.setEnabled(false);
        this.jRBChegada.setEnabled(false);
        this.jRBFaltasCon.setEnabled(false);
        this.jRBFaltasSem.setEnabled(false);
        this.jRBFaltasInt.setEnabled(false);
        this.jRBSaida.setEnabled(false);
        this.jTFIdentificacao.setText("");
        this.jTFIdentificacao.setEnabled(false);
        this.jBCriar.setEnabled(false);
        this.jTFNomeAlerta.setText("");
        this.jTFNomeAlerta.setEnabled(false);
        this.jFTPeriodo1.setText("");
        this.jFTPeriodo2.setText("");
        this.verificaTipos();
        this.jBAlerta.setEnabled(true);
        this.jBRelatorio.setEnabled(true);
        this.jBVoltar.setEnabled(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bGMonitora;
    private javax.swing.ButtonGroup bGTipos;
    private javax.swing.JButton jBAlerta;
    private javax.swing.JButton jBCriar;
    private javax.swing.JButton jBExcluirTab;
    private javax.swing.JButton jBRelatorio;
    private javax.swing.JButton jBVoltar;
    private javax.swing.JFormattedTextField jFTChegadaMin;
    private javax.swing.JFormattedTextField jFTChegadaVezes;
    private javax.swing.JFormattedTextField jFTFaltasCon;
    private javax.swing.JFormattedTextField jFTFaltasInt;
    private javax.swing.JFormattedTextField jFTPeriodo1;
    private javax.swing.JFormattedTextField jFTPeriodo2;
    private javax.swing.JFormattedTextField jFTSaidaMin;
    private javax.swing.JFormattedTextField jFTSaidaVezes;
    private javax.swing.JLabel jLAux;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRBAluno;
    private javax.swing.JRadioButton jRBChegada;
    private javax.swing.JRadioButton jRBCurso;
    private javax.swing.JRadioButton jRBFaltasCon;
    private javax.swing.JRadioButton jRBFaltasInt;
    private javax.swing.JRadioButton jRBFaltasSem;
    private javax.swing.JRadioButton jRBSaida;
    private javax.swing.JRadioButton jRBTurma;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFIdentificacao;
    private javax.swing.JTextField jTFNomeAlerta;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jlNomeAlerta;
    // End of variables declaration//GEN-END:variables
}
